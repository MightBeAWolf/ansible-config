---
- name: Gather network facts
  setup:
    gather_subset:
      - network

- name: Gather the Wifi Interfaces
  set_fact:
    wifi_network_interfaces: >-
      {{ ansible_facts['interfaces']
       | select('match', '^(wlan)[0-9]+')
       | list }}
  when: ansible_facts['interfaces'] is defined

- name: Gather the Ethernet Interfaces
  set_fact:
    eth_network_interfaces: >-
      {{ ansible_facts['interfaces']
       | select('match', '^((eth)|(end))[0-9]+')
       | list }}
  when: ansible_facts['interfaces'] is defined

- name: Gather the Ethernet Interfaces
  set_fact:
    eth_network_interfaces: >-
      {{ ansible_facts['interfaces']
       | select('match', '^((eth)|(end))[0-9]+')
       | list }}
  when: ansible_facts['interfaces'] is defined

- name: Get the DNS server IP
  set_fact:
    # dns_server: "{{ hostvars[groups['dns_servers'][0]]['ansible_host'] | default('1.1.1.1') }}"
    dns_servers: >- 
      {{ groups['dns_servers'] 
        | map('extract', hostvars, 
          ['ansible_facts', 'default_ipv4', 'address'])
        + default_dns }}"

- name: Add IPv4 DNS server addresses to WiFi interfaces
  community.general.nmcli:
    ifname: "{{ item }}"
    type: wifi
    dns4: "{{ dns_servers }}"
    ssid: "{{ wifi_network }}"
    state: present
  loop: "{{ wifi_network_interfaces }}"
  loop_control:
    loop_var: item

- name: Add IPv4 DNS server addresses to Ethernet interfaces
  community.general.nmcli:
    ifname: "{{ item }}"
    type: ethernet
    dns4: "{{ dns_servers }}"
    state: present
  loop: "{{ eth_network_interfaces }}"
  loop_control:
    loop_var: item

